# FOR DEVELOPMENT

# Run docker dev
docker-compose -f docker-compose.dev.yml up

# Test
docker exec spotify_api python3 manage.py test

# Coverage
coverage run --source='.' manage.py test spotify
coverage html

# Running single test file
python3 manage.py test spotify.tests.test_track_views.TestTrackViews

# Exporting the env variables to run outside container
export SPOTIPY_CLIENT_ID=ababc
export SPOTIPY_CLIENT_SECRET=ababc
export SPOTIPY_REDIRECT_URI=ababc



# Running server in background and starting scheduler
python3 manage.py runserver & python3 manage.py runapscheduler

# Killing server background
pkill -f runserver

# Run celery
celery -A backend worker -l info

# Docker Redis
docker run -d -p 6379:6379 redis

# Docker Postgres
docker run -d \
    --name spotify_postgres \
    -p 5432:5432 \
    -e POSTGRES_NAME=postgres \
    -e POSTGRES_USER=postgres \
    -e POSTGRES_PASSWORD=postgres \
    -v spotify_data:/var/lib/postgresql/data \
    postgres:latest


### -e PGDATA=/var/lib/postgresql/data/pgdata \


# Reseting database
sudo rm -rf data
docker rm -f postgres
docker run -d \
    --name postgres \
    -p 5432:5432 \
    -e POSTGRES_NAME=postgres \
    -e POSTGRES_USER=postgres \
    -e POSTGRES_PASSWORD=postgres \
    -e PGDATA=/var/lib/postgresql/data/pgdata \
    -v `pwd`/data/db:/var/lib/postgresql/data \
    postgres:14.1

python3 manage.py makemigrations
python3 manage.py migrate
python3 manage.py runserver
